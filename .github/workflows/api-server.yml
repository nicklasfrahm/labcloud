name: api-server

on:
  push:
    paths:
      - api-server/**
      - .github/**
    tags:
      - v*
  pull_request:
    paths:
      - api-server/**
      - .github/**
  workflow_dispatch:

env:
  NAMESPACE: ${{ github.repository_owner }}/labcloud
  APP: api-server
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Configure MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: '4.4'

      - name: Configure Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ${{ env.APP }}
        run: |
          # Upgrade pip.
          python -m pip install --upgrade pip

          # Install dependencies.
          pip install -r requirements.txt

      - name: Lint source files
        working-directory: ${{ env.APP }}
        run: black .

      - name: Run tests
        working-directory: ${{ env.APP }}
        run: pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Generate container meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.NAMESPACE }}/${{ env.APP }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push container image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ env.APP }}
          file: ./${{ env.APP }}/Dockerfile
          cache-from: type=registry,ref=${{ env.NAMESPACE }}/${{ env.APP }}:latest
          cache-to: type=inline
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
